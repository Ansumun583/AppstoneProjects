{"version":3,"sources":["components/mycomp.js","reportWebVitals.js","components/class1.js","components/class3.js","components/class4.js","components/class6.js","components/todolist.js","index.js"],"names":["MyComp","props","handleAdd","e","setState","sum","parseInt","val","val1","handleSub","alert","handleMul","handleDiv","state","sub","mul","div","className","onClick","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Todolist","handleChange","item","target","value","handleDelete","index","temp","task","ele","splice","console","log","temp2","task1","push","task2","handlePush","handleUndo","Grid","container","direction","justify","alignItems","TextField","id","label","onChange","Button","variant","color","disabled","style","margin","justifyContent","length","backgroundColor","padding","borderRadius","width","display","map","single","size","red","fontSize","green","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eb98134.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default class MyComp extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props); \r\n        this.state={\r\n            sum:0,\r\n            sub:0,\r\n            mul:0,\r\n            div:0\r\n        }\r\n    }\r\n    handleAdd= (e) =>{\r\n        /*alert(parseInt(this.props.val)+parseInt(this.props.val1))*/\r\n        this.setState(\r\n            {\r\n                sum:parseInt(this.props.val)+parseInt(this.props.val1)\r\n            }\r\n        )\r\n        \r\n\r\n    }\r\n    handleSub= (e) =>{\r\n        alert(parseInt(this.props.val)-parseInt(this.props.val1))\r\n        \r\n        \r\n        \r\n\r\n    }\r\n    handleMul= (e) =>{\r\n        alert(parseInt(this.props.val)*parseInt(this.props.val1))\r\n\r\n    }\r\n    handleDiv= (e) =>{\r\n        alert(parseInt(this.props.val)/parseInt(this.props.val1))\r\n\r\n\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n               \r\n                <div>\r\n                <button className= \"buttonField\" onClick={this.handleAdd}>Add</button>\r\n                <button className= \"buttonField\" onClick={this.handleSub}>Subtract</button>\r\n                <button className= \"buttonField\" onClick={this.handleMul}>Multiplication</button>\r\n                <button className= \"buttonField\" onClick={this.handleDiv}>Division</button>\r\n                <br/>\r\n                </div>\r\n                <div className=\"note\">\r\n                 result : {this.state.sum}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport MyComp from \"./mycomp\"\r\nimport \"../styles/styles.css\"\r\nexport default class Hello extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            number1:0,\r\n            number2:0,\r\n            \r\n        }\r\n    }\r\n\r\n\r\n   \r\n    render()\r\n    {\r\n        return(\r\n           <div className=\"layout\">\r\n               <div >\r\n                  \r\n                  <div>\r\n                    <label>Number</label>\r\n                    <input className=\"inputField\" placeholder=\"Enter the number\"  onChange={(e)=>{this.setState({number1:e.target.value})}}/>\r\n                     \r\n                 </div>\r\n                 <div>\r\n                 <label>Number</label>      \r\n                 <input className=\"inputField\"placeholder=\"Enter the number\"   onChange={(e)=>{this.setState({number2:e.target.value})}}/>\r\n                 </div>\r\n                 \r\n               </div>\r\n               <MyComp val={this.state.number1} val1={this.state.number2}/>\r\n                <div className=\"note\">\r\n                    <p className=\"fonts\">\r\n                        Note:\r\n                              The value of the result is rendered in alert Message\r\n                    </p>\r\n                </div>\r\n\r\n                \r\n               \r\n            </div>\r\n        )\r\n    }\r\n   \r\n}","import React from \"react\";\r\nimport \"../styles/styles1.css\";\r\n\r\nexport default class Avg extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      number1: 0,\r\n      number2: 0,\r\n      sum: 0,\r\n      avg: 0,\r\n    };\r\n  }\r\n  handleClick = () => {\r\n    this.setState(\r\n      {\r\n        sum: parseInt(this.state.number1) + parseInt(this.state.number2),\r\n      },\r\n      () => {\r\n        this.setState({\r\n          avg: this.state.sum / 2,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout\">\r\n        <div>\r\n          <label>number</label>\r\n          <input\r\n            className=\"inputField\"\r\n            placeholder=\"enter a number\"\r\n            onChange={(e) => {\r\n              this.setState({ number1: e.target.value });\r\n            }}\r\n          />\r\n\r\n          <div />\r\n          <label>number</label>\r\n          <input\r\n            className=\"inputField\"\r\n            placeholder=\"enter a number\"\r\n            onChange={(e) => {\r\n              this.setState({ number2: e.target.value });\r\n            }}\r\n          />\r\n        </div>\r\n        <label>Result</label>\r\n\r\n        <div className=\"result\">\r\n          <div> Sum: {this.state.sum}</div>\r\n          <div>Avg: {this.state.avg}</div>\r\n        </div>\r\n        <div>\r\n          <button className=\"buttonField\" onClick={this.handleClick}>\r\n            Click\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport \"../styles/styles2.css\"\r\nexport default class Mapper extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            arr: [\r\n                {\r\n                    name: \" Ansumun \",\r\n                    role: \"React JS\"\r\n                },\r\n\r\n                {\r\n                    name: \"Soumya\",\r\n                    role: \"Node JS\"\r\n                },\r\n                {\r\n                    name: \"Sambit\",\r\n                    role: \"Angular JS\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleInput1 = (e) => {\r\n        this.setState({\r\n            name: e.target.value,\r\n\r\n        })\r\n    }\r\n\r\n    handleInput2 = (e) => {\r\n        this.setState({\r\n            role: e.target.value,\r\n        })\r\n    }\r\n\r\n    handlePush = () => {\r\n        var temp = this.state.arr;\r\n        temp.push({\r\n            name: this.state.name,\r\n            role: this.state.role\r\n        })\r\n        this.setState({\r\n            arr: temp,\r\n            name: \"\",\r\n            role: \"\"\r\n        })\r\n\r\n    }\r\n\r\n   \r\n\r\n    handleDelete = (e, index) => {\r\n        var temp=this.state.arr\r\n        temp.splice(index,1)\r\n        this.setState({\r\n            arr:temp\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"layout\">\r\n              \r\n                {this.state.arr.map((single, index) => {\r\n                    return (\r\n                        <div className = \"res\">\r\n                            {single.name} Domain {single.role} <button className = \"button1\"  onClick={(e) => {\r\n                                        this.handleDelete(e, index)\r\n                                    }}>-</button>\r\n                                \r\n                        </div>\r\n                    )\r\n                })}\r\n                 <div>\r\n                     <div className = \"button\">\r\n                     <input  placeholder=\"Enter The name\"  className = \"inputField\" value={this.state.name} onChange={this.handleInput1} />\r\n                <input  className = \"inputField\" placeholder=\"Enter the Domain\" value={this.state.Domain} onChange={this.handleInput2} />\r\n                <button className = \"add-button\" disabled={this.state.name === \"\"?true:false} onClick={this.handlePush}>\r\n                    ADD\r\n                </button>\r\n                     </div>\r\n               \r\n                 </div>\r\n               \r\n                \r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"../styles/style3.css\";\r\nexport default class Class6 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      job: \"\",\r\n      task: [\r\n        {\r\n          job: \" Ansumun \",\r\n        },\r\n      ],\r\n      task2: [\r\n        {\r\n          job1: \" Ansumun \",\r\n        },\r\n      ],\r\n      item: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput1 = (e) => {\r\n    this.setState({\r\n      job: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlePush = () => {\r\n    var temp = this.state.task;\r\n    temp.push({\r\n      job: this.state.job,\r\n    });\r\n    this.setState({\r\n      task: temp,\r\n      job:\"\"\r\n    });\r\n  };\r\n\r\n  handleDelete = (e, index) => {\r\n    var temp = this.state.task;\r\n    var ele = temp.splice(index, 1);\r\n    console.log(ele[0].job);\r\n    var temp2 = this.state.task2;\r\n    temp2.push({\r\n      job1: ele[0].job,\r\n    });\r\n    this.setState({\r\n      task2: temp2,\r\n    });\r\n\r\n    this.setState({\r\n      task: temp,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout\"> \r\n        <div>\r\n          {this.state.item}\r\n          <div className=\"button\">\r\n            <input\r\n              placeholder=\"Enter The name\"\r\n              className=\"inputField\"\r\n              value={this.state.name}\r\n              onChange={this.handleInput1}\r\n            />\r\n            <button\r\n              className=\"add-button\"\r\n              disabled={this.state.job === \"\" ? true : false}\r\n              onClick={this.handlePush}\r\n            >\r\n              ADD\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"float-container\">\r\n\r\n<div class=\"float-child\">\r\n  <div class=\"green\">\r\n  {this.state.task.map((single, index) => {\r\n              return (\r\n                <div className=\"res\">\r\n                  {single.job}\r\n                  <button\r\n                    className=\"button1\"\r\n                    onClick={(e) => {\r\n                      this.handleDelete(e, index);\r\n                    }}\r\n                  >\r\n                    -\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n  </div>\r\n</div>\r\n\r\n<div class=\"float-child\">\r\n  <div class=\"blue\">\r\n        \r\n            <span>Completed List</span>\r\n            {this.state.task2.map((single, index) => {\r\n              return <div className=\"res\">{single.job1} </div>;\r\n            })}\r\n  </div>\r\n</div>\r\n\r\n</div>\r\n            \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport { green,red } from '@material-ui/core/colors'\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Container from \"@material-ui/core/Container\";\r\nexport default class Todolist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: [\"Clean dishes\"],\r\n      task1: [],\r\n      item: \"\",\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      item: e.target.value,\r\n    });\r\n  };\r\n  handleDelete = (e, index) => {\r\n    var temp = this.state.task;\r\n    var ele = temp.splice(index, 1);\r\n    console.log(ele[0]);\r\n    var temp2 = this.state.task1;\r\n    temp2.push(ele[0]);\r\n    this.setState({\r\n      task2: temp2,\r\n      task: temp,\r\n    });\r\n  };\r\n  handlePush = () => {\r\n    var temp = this.state.task;\r\n    temp.push(this.state.item);\r\n    this.setState({\r\n      task: temp,\r\n      item: \"\",\r\n    });\r\n  };\r\n  handleUndo=(e,index)=>{\r\n    var temp = this.state.task1;\r\n    var ele = temp.splice(index, 1);\r\n    console.log(ele[0]);\r\n    var temp2 = this.state.task;\r\n    temp2.push(ele[0]);\r\n    this.setState({\r\n      task: temp2,\r\n      task2: temp,\r\n    });\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Task\"\r\n            onChange={this.handleChange}\r\n            value={this.state.item}     \r\n\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={this.handlePush}\r\n            disabled={this.state.item===\"\"?true:false}\r\n            style={{\r\n                margin: 20,\r\n                justifyContent: \"center\"\r\n            }}\r\n            \r\n            \r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"center\"\r\n        >\r\n            <Grid>\r\n            {this.state.task.length === 0 ?\r\n                    <h2>No Tasks</h2> :\r\n                    <h2>Tasks pending</h2>}\r\n                <div style={{\r\n                    backgroundColor: \"#f2f2f2\",\r\n                   padding:18,\r\n                    borderRadius: 10,\r\n                    width: 200,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    display: 'flexbox',\r\n                   \r\n                    \r\n                }}>\r\n                    <ul style={{\r\n                        padding: 4,\r\n                        borderRadius: 10,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        display: 'flexbox'\r\n                    }}>\r\n                        {this.state.task.map((single, index) => {\r\n                            return (\r\n                                <li>\r\n                                    {single} <Button style={{margin:0,padding:2}}color=\"primary\" variant=\"text\" size=\"small\" onClick={(e) => {\r\n                                        this.handleDelete(e, index, single)\r\n                                    }}><HighlightOffIcon  style={{ color: red[500] }}/></Button>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </Grid>\r\n\r\n                <Grid>\r\n                {this.state.task1.length === 0 ?\r\n                    <h2>Tasks Pending</h2> :\r\n                    <h2>Tasks Completed</h2>}\r\n                <div style={{\r\n                    backgroundColor: \"#f2f2f2\",\r\n                    padding: 18,\r\n                    borderRadius: 10,\r\n                    width: 200,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    display: 'flexbox'\r\n                }}>\r\n                    <ul style={{\r\n                        padding: 4,\r\n                        borderRadius: 10,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        display: 'flexbox'\r\n                    }}>\r\n                        {this.state.task1.map((single, index) => {\r\n                            return (\r\n                                <li>\r\n                                  <strike>{single}</strike><Button color=\"primary\" variant=\"text\" size=\"small\" onClick={(e) => {\r\n                                        this.handleUndo(e, index, single)\r\n                                    }}><UndoIcon fontSize=\"small\"style={{ color: green[500] }}/></Button> \r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Hello from './components/class1';\nimport reportWebVitals from './reportWebVitals';\nimport Avg from './components/class3'\nimport Class4 from './components/class4'\nimport Class6 from \"./components/class6\"\nimport Todolist from \"./components/todolist\"\n\nReactDOM.render(\n  <React.StrictMode>\n   \n    {/* <Hello/> */}\n   {/* <Avg/> */}\n   <Todolist/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}